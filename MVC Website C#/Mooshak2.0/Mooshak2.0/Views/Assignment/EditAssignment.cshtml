@model Mooshak2._0.Models.ViewModels.AssignmentViewModel

@{
    ViewBag.Title = "EditAssignment";
}
<div class="main-view">

    @Html.Partial("~/Views/User/UserMain.cshtml", Model.UserModel)

    <div class="col-sm-9 col-md-10">
        <h2>Edit @Model.Name</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.CourseID)
                @Html.HiddenFor(model => model.FilePath)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Hidden, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Hidden)
                            @Html.ValidationMessageFor(model => model.Hidden, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartDate, "{0:d}", new { htmlAttributes = new { @class = "form-control", @Value = Model.StartDate.ToString("dd.MM.yyyy") } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control", @Value = Model.DueDate.ToString("dd.MM.yyyy") } })
                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @if (Model.UserDataLinks != null)
                    {
                        <table>
                            <tbody>
                                @foreach (var file in Model.UserDataLinks)
                                {
                                    <tr>
                                        <td><a href="@file">@file.Split('\\').LastOrDefault()</a></td>
                                        <td>@Html.ActionLink("Remove", "RemoveFile", "Assignment", new { FilePath = file }, new { @class = "btn btn-danger", @onclick = "return confirm('Are you sure you wish to remove?');" })</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
                @*@{ 
                    var files = Directory.GetFiles("~\\" + Model.FilePath);
                }
                <ul>
                    @foreach (var path in files)
                    {
                        var filename = Path.GetFileName(path);
                        <li><a href="@filename">@filename.Split('\\').LastOrDefault()</a></li>
                    }
                </ul>*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update" class="btn btn-default" />
                        @Html.ActionLink("Delete", "DeleteAssignment", "Assignment", new { AssID = Model.ID, CourseID = Model.CourseID }, new { @class = "btn btn-danger", @onclick = "return confirm('Are you sure you wish to delete?');" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>